<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2024/08/27/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>Hexo+GitHubPages搭建个人博客</title>
    <url>/2024/09/04/Hexo-GitHubPages%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<p>Hexo 是一个高效的静态网站生成器，使用简洁的 Markdown（或其他模板引擎）编写内容，支持丰富的插件和主题，允许用户轻松定制网站。它通过将文本转换为静态HTML页面，使得网站加载速度快，易于部署，同时支持多平台发布，非常适合创建博客、文档或个人网站。本文将介绍如何使用Hexo搭建个人博客并且将博客文章免费放到github上。</p>
<h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>本机是Windows 10 专业版，此教程适用于Windows10， Windows11各版本。Hexo是基于Node.js的框架，同时我们要用到git进行部署。</p>
<p>软件需求：</p>
<ul>
<li><a href="https://nodejs.org/en">Node.js官网 (nodejs.org)</a></li>
<li><a href="https://git-scm.com/">Git官网 (git-scm.com)</a></li>
</ul>
<p>软件安装教程</p>
<ul>
<li><a href="https://somolll.github.io/2024/09/04/Windows%E7%B3%BB%E7%BB%9F%E4%B8%8ANodeJS%E5%AE%89%E8%A3%85%E5%8F%8A%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E5%9B%BE%E6%96%87%E6%95%99%E7%A8%8B/">Windows系统上Nodejs安装及环境配置图文教程 | 清风 (somolll.github.io)</a></li>
<li><a href="https://somolll.github.io/2024/09/04/Windows%E7%B3%BB%E7%BB%9F%E4%B8%8AGit%E8%AF%A6%E7%BB%86%E5%9B%BE%E6%96%87%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/">Windows系统上Git详细图文安装及使用教程 | 清风 (somolll.github.io)</a></li>
</ul>
<h2 id="本地搭建Hexo环境"><a href="#本地搭建Hexo环境" class="headerlink" title="本地搭建Hexo环境"></a>本地搭建Hexo环境</h2><p>官网地址：<a href="https://hexo.io/zh-cn/">Hexo</a></p>
<p>在电脑硬盘上任意位置新建存放blog文件的文件，例如d:\blog。本文将以d:\hexo_blog文件夹来演示如何搭建环境，同学可以根据你自己的情况建立文件夹。</p>
<p><img src="/../img/Hexo-GitHubPages%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/2bd76bf8b6020d435a950977b1d21dbb.png"></p>
<h3 id="使用Git-Bash初始化环境"><a href="#使用Git-Bash初始化环境" class="headerlink" title="使用Git Bash初始化环境"></a>使用Git Bash初始化环境</h3><p>进入此文件夹，在任意空白处点击右键，在右键菜单中选择<code>Open Git Bash here</code>，打开<code>Git Bash</code>窗口。如果右键菜单中无此选项，请检查环境搭建是否成功。<a href="https://blog.csdn.net/viman3344/article/details/140571500">Git图文安装教程</a></p>
<p><img src="/../img/Hexo-GitHubPages%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/0dee228706ea30b6533e792eb021ac2c.png"></p>
<p><img src="/../img/Hexo-GitHubPages%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/ab9464da053e23929b4800bc3aa10513.png"></p>
<p>打开之后输入以下命令修改npm的源为阿里的源：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm config set registry https://registry.npmmirror.com</span><br></pre></td></tr></table></figure>

<p><img src="/../img/Hexo-GitHubPages%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/63e468094dedac489772be5771abc0d4.png"></p>
<p>执行完成之后，输入以下命令一键安装hexo</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure>

<p><img src="/../img/Hexo-GitHubPages%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/217714883cd5f676715b5bfa2132f25a.png"></p>
<p>完成之后再依次执行以下命令并回车，启动初始化并安装组件：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo init</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure>

<p>命令执行完毕之后，文件夹里会增加类似以下的文件目录，安装完成。</p>
<p><img src="/../img/Hexo-GitHubPages%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/736ca4aae3a88e31a1b174ba06c78215.png"></p>
<blockquote>
<p>[!CAUTION]</p>
<p>可能遇到的问题：</p>
<p>输入<code>hexo init</code>后,可能卡在<code>INFO Install dependencies</code>不动，此时需按下Ctrl+C停止此命令，继续输入<code>npm install</code>即可。</p>
</blockquote>
<h3 id="启动Hexo服务"><a href="#启动Hexo服务" class="headerlink" title="启动Hexo服务"></a>启动Hexo服务</h3><p>安装完成之后，在hexo博客目录下执行以下命令开启Hexo服务（默认情况下，访问网址为： <code>http://localhost:4000/</code>）：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure>

<p>见到如下图界面表名Hexo服务启动成功。打开浏览器输入<code>http://localhost:4000/</code>即可看到博客预览界面。</p>
<p><img src="/../img/Hexo-GitHubPages%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/fdaaf03aa4620ecb139c21c15479dda8.png"></p>
<p>启动过程中如果出现<code>Windows安全中心警报</code>，需要点<code>允许访问</code>。</p>
<p><img src="/../img/Hexo-GitHubPages%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/f97b32100fbba249a35a32e730787194.png"></p>
<p><img src="/../img/Hexo-GitHubPages%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/e821cc3b146497b45eebf96f5ee35439.png"></p>
<p>恭喜，Hexo服务启动成功！！！其他详细设置，可参考官方文档继续完善。</p>
<h2 id="部署到GitHub-Pages"><a href="#部署到GitHub-Pages" class="headerlink" title="部署到GitHub Pages"></a>部署到GitHub Pages</h2><h3 id="创建GitHub仓库"><a href="#创建GitHub仓库" class="headerlink" title="创建GitHub仓库"></a>创建GitHub仓库</h3><p>登录GitHub账号之后新建一个仓库，仓库名为<code>用户名.github.io</code>，这里的用户名替换为你自己GitHub上的用户名。</p>
<p>比如你的用户名是ABc123，新建的仓库名就是abc123.github.io</p>
<p>没有Github账号的同学可以参考教程注册。</p>
<p><img src="/../img/Hexo-GitHubPages%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/02060262b75c117701c6289757f065dd.png"></p>
<p>创建时，选择<code>Public</code>类型。勾选<code>Add a README file</code>来创建默认的<code>main</code>分支。 仓库名为<code>用户名.github.io</code>。填写完毕之后点击<code>Create repository</code>按钮完成创建。</p>
<p><img src="/../img/Hexo-GitHubPages%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/2de02ff5fc44380ce2733159b7ec7625.png"></p>
<h3 id="为GitHub账号设置ssh"><a href="#为GitHub账号设置ssh" class="headerlink" title="为GitHub账号设置ssh"></a>为GitHub账号设置ssh</h3><h4 id="设置本地git账号"><a href="#设置本地git账号" class="headerlink" title="设置本地git账号"></a>设置本地git账号</h4><p>在刚才的<code>Git Bash</code>窗口中输入以下命令并回车，将其中你的GitHub信息替换掉。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git config --global user.name &quot;你的GitHub用户名&quot;</span><br><span class="line">git config --global user.email &quot;你的GitHub注册邮箱&quot;</span><br></pre></td></tr></table></figure>

<p><img src="/../img/Hexo-GitHubPages%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/74d8f6e6525148660d5ab031f2bac751.png"></p>
<p>生成之后，去当前用户名的文件夹下的.ssh文件夹中找到<code>id_rsa.pub</code>密钥文件，用文本编辑器打开并<strong>复制其内容</strong>。</p>
<p>当前用户名的文件一般是<code>C:\Users\Administrator\.ssh</code>，如果当前系统用户不是Administrator，只需要把Administrator换成你的用户名即可。</p>
<h4 id="在GitHub新建ssh-key"><a href="#在GitHub新建ssh-key" class="headerlink" title="在GitHub新建ssh key"></a>在GitHub新建ssh key</h4><p>回到浏览器，在github的页面中点击右上角的用户头像按钮，在弹出的菜单中选择<code>Settings</code>功能。</p>
<p><img src="/../img/Hexo-GitHubPages%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/ef046679e31879212468fbe271b5e8ca.png"></p>
<p>在新页面中点击左侧菜单中的<code>SSH and GPG keys</code>按钮进入SSH keys设置页面。</p>
<p><img src="/../img/Hexo-GitHubPages%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/39941c77513ba90541ce43db8af0b220.png"></p>
<p>点击页面右侧的<code>New SSH key</code>按钮，新增ssh key</p>
<p><img src="/../img/Hexo-GitHubPages%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/b6ccad02e405ab65af4ab96d1b22755c.png"></p>
<p>在新页面中如下图填写并点击按钮保存。</p>
<p><img src="/../img/Hexo-GitHubPages%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/237c295ba249a84839dfad07790a92ae.png"></p>
<p>在Git Bash中检测GitHub公钥设置是否成功，输入以下命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh git@github.com</span><br></pre></td></tr></table></figure>

<p><img src="/../img/Hexo-GitHubPages%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/1133696f2415e2843573722e96ee3b2f.png"></p>
<p>如上则说明成功。这里之所以设置GitHub密钥原因是，通过非对称加密的公钥与私钥来完成加密，公钥放置在GitHub上，私钥放置在自己的电脑里。GitHub要求每次推送代码都是合法用户，所以每次推送都需要输入账号密码验证推送用户是否是合法用户，为了省去每次输入密码的步骤，采用了ssh，当你推送的时候，git就会匹配你的私钥跟GitHub上面的公钥是否是配对的，若是匹配就认为你是合法用户，则允许推送。这样可以保证每次的推送都是正确合法的。</p>
<h3 id="将博客部署到GitHub"><a href="#将博客部署到GitHub" class="headerlink" title="将博客部署到GitHub"></a>将博客部署到GitHub</h3><p>在刚才的<code>Git Bash</code>窗口中输入以下命令，安装hexo-deployer-git插件：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>

<p><img src="/../img/Hexo-GitHubPages%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/fdaaf03aa4620ecb139c21c15479dda8.png"></p>
<p>打开博客文件夹中的<code>_config.yml</code>文件，找到其中<code>deploy</code>的部分并更改deploy的内容，用户名替换为自己的github用户名，修改完成之后保存并关闭该文件。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: &#x27;git&#x27;</span><br><span class="line">  repo: git@github.com:用户名/用户名.github.io.git</span><br><span class="line">  branch: main</span><br></pre></td></tr></table></figure>

<p>回到<code>Git Bash</code>窗口，输入以下命令生成静态文件并上传GitHub：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure>

<p><img src="/../img/Hexo-GitHubPages%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/d10ccd0186bc0517c9662288c54a5054.png"></p>
<p>恭喜你已经成功配置好了ssh连接GitHub，并已经把生成的静态页面上传github成功了。</p>
<p>接下来可以在浏览器中打开<code>**https://用户名.github.io**</code>查看你的博客效果，快去试一下吧。</p>
<p><img src="/../img/Hexo-GitHubPages%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/e821cc3b146497b45eebf96f5ee35439.png"></p>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo博客搭建教程</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows系统上Git详细图文安装及使用教程</title>
    <url>/2024/09/04/Windows%E7%B3%BB%E7%BB%9F%E4%B8%8AGit%E8%AF%A6%E7%BB%86%E5%9B%BE%E6%96%87%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<p>Git 是一种高效、分布式的<a href="https://so.csdn.net/so/search?q=%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6%E7%B3%BB%E7%BB%9F&spm=1001.2101.3001.7020">版本控制系统</a>，用于代码的跟踪、分支管理和协同工作，支持快速提交、合并和回滚操作。它是开发者工具箱中必不可少的工具之一，广泛应用于软件开发和其他需要版本控制的领域。</p>
<h2 id="Git的安装"><a href="#Git的安装" class="headerlink" title="Git的安装"></a>Git的安装</h2><h3 id="Git下载"><a href="#Git下载" class="headerlink" title="Git下载"></a>Git下载</h3><p>可以通过以下任意链接下载<a href="https://so.csdn.net/so/search?q=Git%E5%AE%89%E8%A3%85%E7%A8%8B%E5%BA%8F&spm=1001.2101.3001.7020">Git安装程序</a></p>
<ul>
<li><strong><a href="https://registry.npmmirror.com/binary.html?path=git-for-windows/">阿里镜像链接</a>（建议从这里下载，速度很快）</strong></li>
<li><a href="https://git-scm.com/">git-scm.com</a>（官方网站，提供了各个平台（Windows、Mac、Linux）的安装程序）</li>
<li><a href="https://gitforwindows.org/">gitforwindows.org</a>（只有 windows 系统的安装包）</li>
</ul>
<p>本文下载发文之时最新的git版本：<code>Git-2.45.2-64-bit.exe</code></p>
<h4 id="使用许可说明"><a href="#使用许可说明" class="headerlink" title="使用许可说明"></a>使用许可说明</h4><p>双击下载后的<code>Git-2.45.2-64-bit.exe</code>，开始安装，这个界面主要展示了 GPL 第 2 版协议1的内容，点击 <code>Next</code> 进入下一步。</p>
<p><img src="/../img/Windows%E7%B3%BB%E7%BB%9F%E4%B8%8AGit%E8%AF%A6%E7%BB%86%E5%9B%BE%E6%96%87%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/6fa9fce383da14825c0d5f3002691dde.png"></p>
<h4 id="选择安装目录"><a href="#选择安装目录" class="headerlink" title="选择安装目录"></a>选择安装目录</h4><p>最好点击 “Browse…” 更换目录，<strong>尽量不要安装在C盘</strong>。点击 <code>Next</code> 进入下一步。</p>
<p><img src="/../img/Windows%E7%B3%BB%E7%BB%9F%E4%B8%8AGit%E8%AF%A6%E7%BB%86%E5%9B%BE%E6%96%87%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/ef815cc7c8ed635c6ae4347672842c38.png"></p>
<h4 id="选择安装组件"><a href="#选择安装组件" class="headerlink" title="选择安装组件"></a>选择安装组件</h4><p>大家根据自己的需要选择勾选。<strong>一般默认即可</strong>，点击<code>Next</code> 进入下一步。</p>
<p><img src="/../img/Windows%E7%B3%BB%E7%BB%9F%E4%B8%8AGit%E8%AF%A6%E7%BB%86%E5%9B%BE%E6%96%87%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/6ae144a947024ed608752387e227aa02.png"></p>
<blockquote>
<p>[!TIP]</p>
<p>接下来，<strong>一般默认即可</strong>，点击<code>Next</code> 进入安装完成。</p>
</blockquote>
<p><img src="/../img/Windows%E7%B3%BB%E7%BB%9F%E4%B8%8AGit%E8%AF%A6%E7%BB%86%E5%9B%BE%E6%96%87%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/4cab97fc637410660a0f19e80b6ffc5b.png"></p>
<h3 id="Git的功能简介"><a href="#Git的功能简介" class="headerlink" title="Git的功能简介"></a>Git的功能简介</h3><p>安装完成之后，在开始菜单里能够看到如下列表。</p>
<p><img src="/../img/Windows%E7%B3%BB%E7%BB%9F%E4%B8%8AGit%E8%AF%A6%E7%BB%86%E5%9B%BE%E6%96%87%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/e53669910652a32ce1c4b1f8674fa323.png"></p>
<p>有 <code>Git Bash</code>、<code>Git CMD</code>、<code>Git FAQs</code>、<code>Git GUI</code>、<code>Git Release Note</code>，下面我们就分别介绍一下这几个。</p>
<h4 id="Git-Bash"><a href="#Git-Bash" class="headerlink" title="Git Bash"></a>Git Bash</h4><p><strong>描述</strong>： <code>Git Bash</code> 是一个命令行工具，提供了类似于 Linux Shell 的环境，使用户能够在 Windows 系统上使用类Unix命令。<br><strong>用途</strong>： 通过 Git Bash，用户可以使用 Git 的命令行功能，执行版本控制任务，例如克隆仓库、提交更改等。</p>
<p><img src="/../img/Windows%E7%B3%BB%E7%BB%9F%E4%B8%8AGit%E8%AF%A6%E7%BB%86%E5%9B%BE%E6%96%87%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/67a4bb4f718042e960151cff0c67c513.png"></p>
<h4 id="Git-CMD"><a href="#Git-CMD" class="headerlink" title="Git CMD"></a>Git CMD</h4><p>Git CMD 不能说和 cmd 完全一样，只能说一模一样，功能少得可怜，如下图：</p>
<p><img src="/../img/Windows%E7%B3%BB%E7%BB%9F%E4%B8%8AGit%E8%AF%A6%E7%BB%86%E5%9B%BE%E6%96%87%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/58baf7e759c53391c4befbf1eb9b22c7.png"></p>
<h4 id="Git-FAQs"><a href="#Git-FAQs" class="headerlink" title="Git FAQs"></a>Git FAQs</h4><p>Git FAQs 就是 Git Frequently Asked Questions（常问问题），访问地址：<a href="https://github.com/git-for-windows/git/wiki/FAQ">https://github.com/git-for-windows/git/wiki/FAQ</a></p>
<h4 id="Git-GUI"><a href="#Git-GUI" class="headerlink" title="Git GUI"></a>Git GUI</h4><p>Git GUI 就是 Git 的图形化界面。通过 Git GUI，用户可以更直观地查看仓库状态、提交更改、查看历史记录等，适用于那些不太习惯使用命令行的用户。如下图</p>
<p><img src="/../img/Windows%E7%B3%BB%E7%BB%9F%E4%B8%8AGit%E8%AF%A6%E7%BB%86%E5%9B%BE%E6%96%87%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/811c680591a8d86ce78fb3a7f26e6edd.png"></p>
<h4 id="Git-Release-Note"><a href="#Git-Release-Note" class="headerlink" title="Git Release Note"></a>Git Release Note</h4><p>Git Release Note 就是版本说明，增加了什么功能，修复了什么 bug 之类的。</p>
<h2 id="Git的基本使用"><a href="#Git的基本使用" class="headerlink" title="Git的基本使用"></a>Git的基本使用</h2><h3 id="基本的名词和概念"><a href="#基本的名词和概念" class="headerlink" title="基本的名词和概念"></a>基本的名词和概念</h3><p>在 Git 版本控制系统中，有一些基本的名词和概念，它们构成了 Git 工作流程的基础。下面是一些核心概念的简要介绍：</p>
<ul>
<li>仓库（Repository）：存放项目文件和版本信息的地方，可以是本地的也可以是远程的。</li>
<li>工作目录（Working Directory）：仓库中的文件被检出到一个目录，这个目录就是工作目录，你可以在这里修改文件。</li>
<li>暂存区（Staging Area）：也称为索引，是一个准备下次提交的文件列表，你可以在这里选择哪些更改将被包括在提交中。</li>
<li>提交（Commit）：将暂存区的更改永久保存到仓库的版本历史中。</li>
<li>分支（Branch）：分支是开发线的起点，你可以创建分支来开发新功能或修复错误，而不会影响主分支。</li>
<li>合并（Merge）：将一个分支的更改合并到另一个分支中，通常是将特性分支的更改合并回主分支。</li>
<li>远程仓库（Remote Repository）：通常是一个服务器上的仓库，用于多人协作，你可以推送（push）和拉取（pull）更改。</li>
<li>克隆（Clone）：从远程仓库复制仓库到本地，包括所有分支和标签。</li>
<li>拉取（Pull）：从远程仓库获取最新的更改并合并到你的本地分支。</li>
<li>推送（Push）：将你的本地分支的更改发送到远程仓库。</li>
<li>标签（Tag）：标记特定的提交，通常用于版本发布。</li>
<li>冲突（Conflict）：当两个分支中的相同文件的同一行被修改，合并时 Git 无法自动解决，需要手动解决。</li>
<li>HEAD：指向当前分支的最新提交。</li>
<li>索引（Index）：有时与暂存区同义，是准备下一次提交的文件列表。</li>
<li>变基（Rebase）：将一系列提交从一个分支上重新应用到另一个分支上，以保持线性的提交历史。</li>
</ul>
<h3 id="Git常用命令"><a href="#Git常用命令" class="headerlink" title="Git常用命令"></a>Git常用命令</h3><p>Git 的命令和操作是 Git 版本控制系统中的核心部分，下面是一些基本的 Git 命令和它们通常的操作步骤：</p>
<p><strong>初始化仓库</strong>：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure>

<p><strong>检出仓库</strong>：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone [url]</span><br></pre></td></tr></table></figure>

<p><strong>查看状态</strong>：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git status</span><br></pre></td></tr></table></figure>

<p>查看当前工作目录和暂存区的状态。</p>
<p><strong>添加文件到暂存区</strong>：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git add [file]</span><br></pre></td></tr></table></figure>

<p>将文件或更改添加到暂存区，准备下一次提交。</p>
<p><strong>查看差异</strong>：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git diff</span><br></pre></td></tr></table></figure>

<p>查看工作目录与暂存区或最后一次提交之间的差异。</p>
<p><strong>提交更改</strong>：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git commit -m &quot;commit message&quot;</span><br></pre></td></tr></table></figure>

<p>将暂存区的更改提交到仓库。</p>
<p><strong>查看提交历史</strong>：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git log</span><br></pre></td></tr></table></figure>

<p>查看项目的提交历史。</p>
<p><strong>创建分支</strong>：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git branch [branch-name]</span><br></pre></td></tr></table></figure>

<p>创建一个新的分支。</p>
<p><strong>切换分支</strong>：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git checkout [branch-name]</span><br></pre></td></tr></table></figure>

<p>切换到指定的分支。</p>
<p><strong>合并分支</strong>：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git merge [branch-name]</span><br></pre></td></tr></table></figure>

<p>将一个分支的更改合并到当前分支。</p>
<p><strong>拉取远程分支</strong>：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git pull</span><br></pre></td></tr></table></figure>

<p>从远程仓库拉取最新更改并自动合并到当前分支。</p>
<p><strong>推送到远程仓库</strong>：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git push [remote-name] [branch-name]</span><br></pre></td></tr></table></figure>

<p>将本地分支的更改推送到远程仓库。</p>
<p><strong>查看远程仓库</strong>：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git remote -v</span><br></pre></td></tr></table></figure>

<p>查看远程仓库的详细信息。</p>
<p><strong>删除分支</strong>：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git branch -d [branch-name]</span><br></pre></td></tr></table></figure>

<p>删除本地分支。</p>
<p><strong>查看文件更改</strong>：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git diff [branch-name]</span><br></pre></td></tr></table></figure>

<p>查看当前分支与另一个分支的差异。</p>
<p><strong>重置更改</strong>：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git reset [file]</span><br></pre></td></tr></table></figure>

<p>将文件从暂存区撤销到工作目录。</p>
<p><strong>查看分支图</strong>：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git branch --all --graph</span><br></pre></td></tr></table></figure>

<p>以图形方式查看所有分支。</p>
<p><strong>变基分支</strong>：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git rebase [branch-name]</span><br></pre></td></tr></table></figure>

<p>将当前分支上的提交重新应用到另一个分支上。</p>
<p><strong>标签管理</strong>：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git tag [tag-name]</span><br></pre></td></tr></table></figure>

<p>给当前提交打上标签，通常用于版本发布。</p>
<p>这些命令和操作步骤是 Git 使用中的基础，掌握它们可以帮助你更有效地进行版本控制。</p>
<p>Git 拥有一个庞大的命令集，这些命令覆盖了从基础到高级的多种使用场景。在开始使用 Git 之前，建议您先学习一些基础的版本控制概念。通过不断的实践和探索，您将逐步深入了解 Git 的强大功能。Git 的真正魅力在于它的灵活性和丰富功能，它能够适应各种复杂的开发环境和工作流程。</p>
]]></content>
      <categories>
        <category>Git</category>
      </categories>
      <tags>
        <tag>hexo博客搭建之Git</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows系统上Nodejs安装及环境配置图文教程</title>
    <url>/2024/09/04/Windows%E7%B3%BB%E7%BB%9F%E4%B8%8ANodeJS%E5%AE%89%E8%A3%85%E5%8F%8A%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E5%9B%BE%E6%96%87%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<p>Node.js 是一个基于 Chrome V8 引擎的 JavaScript 运行环境，允许在服务器端运行 JavaScript 代码。它采用事件驱动、非阻塞 I&#x2F;O 模型，非常适合构建高性能的网络应用程序。Node.js 提供了一系列内置模块，支持异步编程，易于扩展，广泛应用于 Web 开发、实时应用和各种服务端开发场景。</p>
<h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>本机是Windows 10 专业版，此教程适用于Windows10， Windows11各版本。</p>
<h2 id="Node-js的安装"><a href="#Node-js的安装" class="headerlink" title="Node.js的安装"></a>Node.js的安装</h2><h3 id="Node-js下载"><a href="#Node-js下载" class="headerlink" title="Node.js下载"></a>Node.js下载</h3><h4 id="下载最新版"><a href="#下载最新版" class="headerlink" title="下载最新版"></a>下载最新版</h4><p>进入<a href="https://nodejs.org/en/download/">官网</a>下载Node.js。</p>
<p><img src="/../img/Windows%E7%B3%BB%E7%BB%9F%E4%B8%8ANodejs%E5%AE%89%E8%A3%85%E5%8F%8A%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E5%9B%BE%E6%96%87%E6%95%99%E7%A8%8B/3031a9eedd392074ce87156b34ef533f.png" alt="3031a9eedd392074ce87156b34ef533f"></p>
<p>本文下载发文之时最新的版本：<code>node-v20.15.1-x64.msi</code></p>
<h4 id="下载特定版本"><a href="#下载特定版本" class="headerlink" title="下载特定版本"></a>下载特定版本</h4><p>如果需要下载特定版本，则需要点击版本号的下拉框，在其中选择指定的版本进行下载</p>
<p><img src="/../img/Windows%E7%B3%BB%E7%BB%9F%E4%B8%8ANodejs%E5%AE%89%E8%A3%85%E5%8F%8A%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E5%9B%BE%E6%96%87%E6%95%99%E7%A8%8B/afa28cddcf88b6ee2b1c187b9cea36e3.png" alt="afa28cddcf88b6ee2b1c187b9cea36e3"></p>
<h3 id="Node-js安装"><a href="#Node-js安装" class="headerlink" title="Node.js安装"></a>Node.js安装</h3><h4 id="安装向导"><a href="#安装向导" class="headerlink" title="安装向导"></a>安装向导</h4><p>点击<code>Next</code>进入下一步。</p>
<p><img src="/../img/Windows%E7%B3%BB%E7%BB%9F%E4%B8%8ANodejs%E5%AE%89%E8%A3%85%E5%8F%8A%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E5%9B%BE%E6%96%87%E6%95%99%E7%A8%8B/477296a3533c52c28b66ff3cebc07c10.png" alt="477296a3533c52c28b66ff3cebc07c10"></p>
<h4 id="使用许可说明"><a href="#使用许可说明" class="headerlink" title="使用许可说明"></a>使用许可说明</h4><p>勾选<code>I accept the terms in the License Agreement</code>勾选框，点击<code>Next</code>进入下一步。</p>
<p><img src="/../img/Windows%E7%B3%BB%E7%BB%9F%E4%B8%8ANodejs%E5%AE%89%E8%A3%85%E5%8F%8A%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E5%9B%BE%E6%96%87%E6%95%99%E7%A8%8B/2f3116f51e008520612336c1593f97a7.png" alt="2f3116f51e008520612336c1593f97a7"></p>
<h4 id="选择安装目录"><a href="#选择安装目录" class="headerlink" title="选择安装目录"></a>选择安装目录</h4><p>最好点击 “Change…” 更换目录，<strong>尽量不要安装在C盘</strong>。点击 <code>Next</code> 进入下一步。</p>
<p><img src="/../img/Windows%E7%B3%BB%E7%BB%9F%E4%B8%8ANodejs%E5%AE%89%E8%A3%85%E5%8F%8A%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E5%9B%BE%E6%96%87%E6%95%99%E7%A8%8B/365a821c60c97718ca08af19c36d6f1b.png" alt="365a821c60c97718ca08af19c36d6f1b"></p>
<h4 id="自定义安装"><a href="#自定义安装" class="headerlink" title="自定义安装"></a>自定义安装</h4><p><strong>使用默认配置</strong>，点击<code>Next</code>进入下一步。</p>
<p><img src="/../img/Windows%E7%B3%BB%E7%BB%9F%E4%B8%8ANodejs%E5%AE%89%E8%A3%85%E5%8F%8A%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E5%9B%BE%E6%96%87%E6%95%99%E7%A8%8B/92b57ebc739cda0b6e01a3207be86b3c.png" alt="92b57ebc739cda0b6e01a3207be86b3c"></p>
<h4 id="工具安装"><a href="#工具安装" class="headerlink" title="工具安装"></a>工具安装</h4><p><strong>使用默认配置</strong>，点击<code>Next</code>进入下一步。</p>
<p><img src="/../img/Windows%E7%B3%BB%E7%BB%9F%E4%B8%8ANodejs%E5%AE%89%E8%A3%85%E5%8F%8A%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E5%9B%BE%E6%96%87%E6%95%99%E7%A8%8B/d954ac64d1f526494b4975d389c27329.png" alt="d954ac64d1f526494b4975d389c27329"></p>
<h4 id="执行安装"><a href="#执行安装" class="headerlink" title="执行安装"></a>执行安装</h4><p>点击<code>Install</code>执行安装。</p>
<p><img src="/../img/Windows%E7%B3%BB%E7%BB%9F%E4%B8%8ANodejs%E5%AE%89%E8%A3%85%E5%8F%8A%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E5%9B%BE%E6%96%87%E6%95%99%E7%A8%8B/5eb00a5dca17a13e4c4b72bce2f921f0.png" alt="5eb00a5dca17a13e4c4b72bce2f921f0"></p>
<h4 id="安装完成"><a href="#安装完成" class="headerlink" title="安装完成"></a>安装完成</h4><p><img src="/../img/Windows%E7%B3%BB%E7%BB%9F%E4%B8%8ANodejs%E5%AE%89%E8%A3%85%E5%8F%8A%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E5%9B%BE%E6%96%87%E6%95%99%E7%A8%8B/6cfd08d8f8ecd86693ddf498c5bd8f2e.png" alt="6cfd08d8f8ecd86693ddf498c5bd8f2e"></p>
<p>至此，Node.js已经完成安装。可以打开命令行测试是否安装成功，之后还需要进行环境配置。</p>
<h3 id="Node-js测试"><a href="#Node-js测试" class="headerlink" title="Node.js测试"></a>Node.js测试</h3><p>在键盘按下<code>Win</code> + <code>R</code>快捷键，输入<code>cmd</code>，然后回车启动命令行窗口。分别输入<code>node -v</code>和<code>npm -v</code>来查看node.js版本和npm版本。</p>
<blockquote>
<p>[!NOTE]</p>
<p>新版的Node.js已自带npm，安装Node.js时会一起安装，npm的作用就是对Node.js依赖的包进行管理，也可以理解为用来安装&#x2F;卸载Node.js需要装的东西</p>
</blockquote>
<p><img src="/../img/Windows%E7%B3%BB%E7%BB%9F%E4%B8%8ANodejs%E5%AE%89%E8%A3%85%E5%8F%8A%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E5%9B%BE%E6%96%87%E6%95%99%E7%A8%8B/39e9533fd41c2b66e30ee4da8dc7ff18.png" alt="39e9533fd41c2b66e30ee4da8dc7ff18"></p>
<h3 id="Node-js安装目录"><a href="#Node-js安装目录" class="headerlink" title="Node.js安装目录"></a>Node.js安装目录</h3><p>安装完成之后，在开始菜单里能够看到如下列表。</p>
<p><img src="/../img/Windows%E7%B3%BB%E7%BB%9F%E4%B8%8ANodejs%E5%AE%89%E8%A3%85%E5%8F%8A%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E5%9B%BE%E6%96%87%E6%95%99%E7%A8%8B/4911dc9a905a939b6c1f90ac8aa60f37.png" alt="4911dc9a905a939b6c1f90ac8aa60f37"></p>
<h2 id="Node-js环境配置"><a href="#Node-js环境配置" class="headerlink" title="Node.js环境配置"></a>Node.js环境配置</h2><p>Node.js安装包自带了npm，但安装时不会自动给npm配置全局安装包路径的环境变量（不配的话运行js程序时可能会报找不到包的错误）。</p>
<ol>
<li><p>打开Node.js的安装目录</p>
</li>
<li><p>在该目录中新增**node_global 和 node_cache **文件夹<img src="/../img/Windows%E7%B3%BB%E7%BB%9F%E4%B8%8ANodejs%E5%AE%89%E8%A3%85%E5%8F%8A%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E5%9B%BE%E6%96%87%E6%95%99%E7%A8%8B/9675b60ab17963a25c71e0f15615224c.png" alt="9675b60ab17963a25c71e0f15615224c"></p>
</li>
<li><p>文件夹创建完成之后，打开cmd窗口，输入以下命令。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm config set prefix &quot;&#123;Node.js安装目录&#125;\node_global&quot;</span><br><span class="line">npm config set cache &quot;&#123;Node.js安装目录&#125;\node_cache&quot;</span><br></pre></td></tr></table></figure>


</li>
<li><p>鼠标点击右键选择<code>属性</code>，在弹出的界面中依次选择<code>高级系统设置</code>、<code>高级</code>、<code>环境变量</code>打开环境变量设置界面。<img src="/../img/Windows%E7%B3%BB%E7%BB%9F%E4%B8%8ANodejs%E5%AE%89%E8%A3%85%E5%8F%8A%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E5%9B%BE%E6%96%87%E6%95%99%E7%A8%8B/a04cb403f001b2e56838942d5105fba3.png" alt="a04cb403f001b2e56838942d5105fba3"></p>
</li>
<li><p>相关配置</p>
<p>输入以下配置之后，点击<code>确定</code>按钮进行保存。</p>
</li>
</ol>
<p><strong>用户变量 path ：C:\Program Files\nodejs\node_global<br>系统变量 NODE_PATH ：C:\Program Files\nodejs\node_global\node_modules</strong></p>
<p><img src="/../img/Windows%E7%B3%BB%E7%BB%9F%E4%B8%8ANodejs%E5%AE%89%E8%A3%85%E5%8F%8A%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E5%9B%BE%E6%96%87%E6%95%99%E7%A8%8B/40cec6a605de3f890e9f33e17b274b55.png" alt="40cec6a605de3f890e9f33e17b274b55"></p>
<p>至此，Node.js已经安装和配置完成。</p>
]]></content>
      <categories>
        <category>Nodejs</category>
      </categories>
      <tags>
        <tag>hexo博客搭建之Nodejs</tag>
      </tags>
  </entry>
  <entry>
    <title>服装制版基础知识入门</title>
    <url>/2024/09/20/%E6%9C%8D%E8%A3%85%E5%88%B6%E7%89%88%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%85%A5%E9%97%A8/</url>
    <content><![CDATA[<h3 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h3><p><strong>服装：</strong>服装可以从两个方面理解：⑴ 服装就是衣帽的总称。⑵ 服装又是人着装后所呈现的一种状态。</p>
<p><strong>服装分类：</strong>(1)外套：羽绒服、棉服、大衣、风衣、西服、夹克、马甲、皮衣、皮草等。(2)衬衫：长袖衬衫、短袖衬衫、雪纺衫等。(3)针织衫：长袖针织衫、短袖针织衫、毛衣、羊毛&#x2F;羊绒衫等。(4)T恤：长袖T恤、短袖T恤、无袖T恤、POLO衫等。(5)卫衣&#x2F;绒衫：开衫、套头衫等。(6)吊带&#x2F;背心。(7)裤子：休闲裤、牛仔裤、西裤、运动裤、短裤、连体裤、背带裤等。(8)裙子：半身裙、连衣裙等。(9)内衣：内裤、内衣套装、文胸、塑身内衣、吊带&#x2F;背心等。(10)泳装：分体、连体等。</p>
<p><strong>服装结构：</strong>是指服装各部位的组合关系。包括服装的整体与局部的组合关系，以及各部位外部轮廓线之间的组合关系，部位内部的结构线以及各层服装材料之间的组合关系。服装结构由服装的造型和功能所决定。</p>
<p><strong>结构制图：</strong>是对服装结构进行分析计算，在纸张上绘制出服装结构线的过程，结构制图比例可根据结构制图的目的而灵活制定。</p>
<p><strong>常见的平面结构设计方法：</strong>⑴ 比例分配法。⑵ 定寸法。(3)原型制版法。</p>
<p><strong>轮廓线：</strong>构成服装部件或成型服装的外部造型线条。</p>
<p><strong>结构线：</strong>能引起服装造型变化的服装部件、外部和内部缝合线的总称。</p>
<p><strong>平面结构设计：</strong>是指分析设计图所表现的立体服装造型的结构组成数量、形态吻合等关系，通过结构制图和某些直观的实验方法将整体结构分解成基本部件的平面设计过程。平面结构设计是立体造型的总结。</p>
<p><strong>立体结构设计：</strong>是指分析设计图所表现的服装造型的结构组成的数量、形态吻合等关系，将服装材料覆合在人体或人台上直接将整体结构分解成基本部件的设计过程。立体结构设计可以直观表达服装的造型。</p>
<p><strong>推板：</strong>是指一种款式多种规格的服装样板制作过程，就是在母板的基础上推出多副不同尺寸的样板。葳：《  754093490  才智服装》上万G服装内部视频 教程 ：</p>
<h3 id="术语："><a href="#术语：" class="headerlink" title="术语："></a>术语：</h3><p>服装专用术语是服装行业中不可缺少的专业语言，每一裁片、部件、画线等都有自己的名称。我国目前各地服装界使用的服装用语大致有3种来源：第一种是<strong>民间服装界</strong>的一些<strong>俗称</strong>，如领子、袖头、劈势、翘势等；第二种是<strong>外来语</strong>，主要是来自于英语和日语的译音，如克夫、塔克等；第三种是其他<strong>工程技术用语</strong>的移植，如轮廓线、结构线、结构图等。</p>
<h4 id="01-常用衣身结构"><a href="#01-常用衣身结构" class="headerlink" title="01  常用衣身结构"></a>01  常用衣身结构</h4><p><strong>搭门</strong>：也叫叠门，是指前身开襟处两片叠在一起的部分。钉钮扣的一边称为里襟，另一边称为门襟。</p>
<p><strong>止口：</strong>是指上衣前身叠门的外边线。</p>
<p><strong>挂面：</strong>又叫过面，是指叠门的反面有一层比叠门宽的贴边。</p>
<p><strong>覆肩：</strong>也叫过肩，是指覆在男式衬衫肩上的双层布料。</p>
<p><strong>克夫：</strong>沿袖口或下摆处的外接边。</p>
<p><strong>缝份：</strong>也叫做份、缝头，是指布边线与缝制线之间的距离。</p>
<p><strong>劈胸：</strong>是指前片领口处搭门需要撇去的部分。</p>
<p><strong>起翘：</strong>是指底边、袖口、袖窿、裤腰等与基本线（指横的纬纱方向）的距离。</p>
<p><strong>开刀：</strong>也叫分割，是指将面料裁剪开后又并拢。常见的有丁字分割、弧线分割和直线分割等。</p>
<p><strong>摆缝：</strong>也叫侧缝，是指缝合前后衣身的缝子。</p>
<p><strong>省道：</strong>为适合人体和造型的需要而将一部分衣料缝去，然后作出衣片的曲面状态。</p>
<p><strong>裥：</strong>为适合体型及造型的需要，将部分衣料缝制或折叠熨烫而成。通常有倒褶和对褶分。</p>
<p><strong>褶：</strong>为适合体型及造型需要，将部分衣料缝缩而成的褶皱。</p>
<p><strong>衩：</strong>为服装的穿脱行走方便及造型需要而设置的开口形式。例如，位于袖口部位的称袖开衩。</p>
<p><strong>塔克：</strong>将衣料折成连口缉成的细缝，起装饰作用。取名于英语tuck的译音。</p>
<h4 id="02领结构"><a href="#02领结构" class="headerlink" title="02领结构"></a>02领结构</h4><p><strong>驳头：</strong>衣身上随领子一起向外拨折的部位。</p>
<p><strong>驳口：</strong>驳头里侧与衣领的翻折部位的总称。</p>
<p><strong>窝势：</strong>是指朝里弯曲。</p>
<p><strong>爬领：</strong>是指外领没有盖住领脚的现象。</p>
<p><strong>平驳领：</strong>是指一般的西装领，领角一般小于驳角。</p>
<p><strong>枪驳领：</strong>驳领上翘，驳角与领角基本上是拼拢的。</p>
<p><strong>插花眼：</strong>也叫插花襻，是指西装或大衣左驳头上的专用凤眼。</p>
<h4 id="03下装结构"><a href="#03下装结构" class="headerlink" title="03下装结构"></a>03下装结构</h4><p><strong>劈势：</strong>是指裁剪线与基本线的距离，也就是将多余的边角劈掉。</p>
<p><strong>困势：</strong>是指后裤片的臀线以上后中缝的倾斜度。</p>
<p><strong>对刀：</strong>是指刀口记号与刀口记号相对。</p>
<p><strong>浪线：</strong>是指裤子的裆弧线。前片的裆弧线称为前浪线，后片的裆弧线称为后浪线。一般后浪线较长而前浪弧线则较短。</p>
<p><strong>育克：</strong>是指前衣片胸部拼接部分，是外来语。</p>
<p><strong>袋片：</strong>无盖的袋口部分。如西装的巾袋（上袋）、西装马甲的大小袋口，大衣的斜叉袋的袋口等。</p>
<p><strong>襻：</strong>起到扣紧、牵吊以及装饰作用的部件，由布料或线制成。</p>
<h3 id="人体的测量与结构图部位名称"><a href="#人体的测量与结构图部位名称" class="headerlink" title="人体的测量与结构图部位名称"></a>人体的测量与结构图部位名称</h3><h4 id="人体测量"><a href="#人体测量" class="headerlink" title="人体测量"></a>人体测量</h4><p>人体各部位的尺寸是结构设计的依据。服装制版量体方法，不同于传统的量体裁衣，它是以测量人体的基本尺寸作参数，而不是为设计某种特定服装所测量的尺寸。“标准尺寸”是在此特定的基础上，根据综合优化人体的特征、行业和客观要求及审美习惯等因素加以修正完善的，旨在达到理想化、标准化和可塑性的目的。“标准尺寸”在服装工业生产中是至关重要的。同时，它亦对单件的量体裁衣具有指导意义和借鉴作用。</p>
<h4 id="01测量部位与测量方法"><a href="#01测量部位与测量方法" class="headerlink" title="01测量部位与测量方法"></a>01测量部位与测量方法</h4><p><img src="/../img/%E6%9C%8D%E8%A3%85%E5%88%B6%E7%89%88%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%85%A5%E9%97%A8/283948612_2_2024052205430035.webp" alt="283948612_2_2024052205430035"></p>
<p>(1)<strong>领围：</strong>把皮尺立起来，在颈部细处围量一周。</p>
<p>(2)<strong>胸围：</strong>通过胸围最丰满处围量一周使皮尺成水平状。</p>
<p>(3)<strong>乳下围：</strong>在乳房的下端用皮尺围水平一周测量。</p>
<p>(4)<strong>腰围：</strong>在腰部最细处围量一周</p>
<p>(5)<strong>手掌周长：</strong>拇指轻轻向掌侧弯曲，通过拇指的根部围量一周。</p>
<p>(6) <strong>前腋点宽</strong>：前胸左右前腋点之间的长。</p>
<p>(7) <strong>胸间距：</strong>左右乳峰点之间的距离。</p>
<p>(8) <strong>前腰节长：</strong>从侧颈点经过乳峰点到腰围线。</p>
<p><img src="/../img/%E6%9C%8D%E8%A3%85%E5%88%B6%E7%89%88%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%85%A5%E9%97%A8/283948612_3_20240522054300223.webp" alt="283948612_3_20240522054300223"></p>
<p><img src="/../img/%E6%9C%8D%E8%A3%85%E5%88%B6%E7%89%88%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%85%A5%E9%97%A8/283948612_4_20240522054300379.webp" alt="283948612_4_20240522054300379"></p>
<p>(9) <strong>肩宽：</strong>左右肩峰点之间的长度。     </p>
<p>(10) <strong>后腋点宽：</strong>背部左右后腋点之间的长。   </p>
<p>(11) <strong>背长：</strong>从BNP点到腰节的长度。</p>
<p>(12) <strong>胸点高：</strong>从颈侧点到胸点的长。</p>
<p>(13) <strong>上臂围：</strong>在上臂最粗的位置水平围量一周。</p>
<p>(14) <strong>肘围：</strong>曲臂后通过肘点围量一周。</p>
<p>(15) <strong>手腕周长：</strong>通过掌根点围量一周。</p>
<p><img src="/../img/%E6%9C%8D%E8%A3%85%E5%88%B6%E7%89%88%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%85%A5%E9%97%A8/283948612_5_20240522054300692.webp" alt="283948612_5_20240522054300692"></p>
<p><img src="/../img/%E6%9C%8D%E8%A3%85%E5%88%B6%E7%89%88%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%85%A5%E9%97%A8/283948612_6_20240522054300785.webp" alt="283948612_6_20240522054300785"></p>
<p>(16) <strong>臂长：</strong>肩端点至手腕的长度。</p>
<p>(17) <strong>袖窿周长：</strong>通过肩峰点、前后腋点和臂根点围量一周。</p>
<p>(18) <strong>头围：</strong>通过前额的中央、耳的上方和后头部的突出部位围量一周。</p>
<p>(19) <strong>臀围：</strong>在臀部最丰满处水平测量一周。</p>
<p>(20) <strong>中臀围：</strong>大约在腰围与臀围中间的位置水平测量一周</p>
<p>(21) <strong>腰高：</strong>靠近侧缝处从腰围线到臀围线间的长度。</p>
<p>(22) <strong>裤长：</strong>在侧面，从腰围线经过膝盖量到外脚踝骨，可以根据当时的流行和爱好来决定裤长。</p>
<p><img src="/../img/%E6%9C%8D%E8%A3%85%E5%88%B6%E7%89%88%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%85%A5%E9%97%A8/283948612_7_20240522054300879.webp" alt="283948612_7_20240522054300879"></p>
<p><img src="/../img/%E6%9C%8D%E8%A3%85%E5%88%B6%E7%89%88%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%85%A5%E9%97%A8/283948612_8_20240522054300989.webp" alt="283948612_8_20240522054300989"></p>
<p>(23) <strong>立裆长：</strong>是从腰量到股根部的长度。</p>
<p>(24) <strong>下裆长：</strong>是从股根部测量到脚踝骨的长。</p>
<p>(25) <strong>大腿围：</strong>是在股根部水平围量一周。</p>
<h4 id="02人体尺寸比例"><a href="#02人体尺寸比例" class="headerlink" title="02人体尺寸比例"></a>02人体尺寸比例</h4><p><strong>人体：</strong>以肚脐为界,上下身比例为5：8符合黄金分割定律。</p>
<p><strong>胸围：</strong>由腋下沿胸部最丰满处围量,约为身高的二分之一。</p>
<p><strong>腰围：</strong>正常情况下量腰部最细处,腰围较胸围小20厘米</p>
<p><strong>髋围：</strong>在体前耻骨平行于臀围最大部位，髋骨较胸围大4厘米。</p>
<p><strong>大腿围：</strong>在大腿的最上部位，臀折线下，大腿较腰围小10厘米。</p>
<p><strong>小腿围：</strong>在小腿最丰满处，小腿围较大腿围小20厘米。</p>
<p><strong>足颈围：</strong>在足颈的最细部位，足颈围较小腿围小10厘米。</p>
<p><strong>上臂围：</strong>在肩关节于肘关节之间的中部，上臂围占大腿围的二分之一</p>
<p><strong>颈围：</strong>在颈的中部最细处，颈围与小腿围相等。</p>
<p><strong>肩宽：</strong>两肩峰之间的距离，肩宽占胸围的二分之一减四厘米</p>
<h3 id="结构制图部位及线条名称"><a href="#结构制图部位及线条名称" class="headerlink" title="结构制图部位及线条名称"></a>结构制图部位及线条名称</h3><h4 id="01上衣部位及线条名称"><a href="#01上衣部位及线条名称" class="headerlink" title="01上衣部位及线条名称"></a>01上衣部位及线条名称</h4><p><img src="/../img/%E6%9C%8D%E8%A3%85%E5%88%B6%E7%89%88%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%85%A5%E9%97%A8/283948612_9_20240522054301223.webp" alt="283948612_9_20240522054301223"></p>
<p>（1）后领圈弧线（2）后小肩线（3）后袖窿弧线（4）后侧缝线（5）后腰省（6）前领圈弧线（7）前小肩线（8）前袖窿弧线（9）胸省（10）前侧缝线（11）前腰省（12）前袖山弧线（13）后袖山弧线（14）前袖底线（15）后袖底线（16）袖口线</p>
<h4 id="02裤子部位及线条名称"><a href="#02裤子部位及线条名称" class="headerlink" title="02裤子部位及线条名称"></a>02裤子部位及线条名称</h4><p><img src="/../img/%E6%9C%8D%E8%A3%85%E5%88%B6%E7%89%88%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%85%A5%E9%97%A8/283948612_10_20240522054301629.webp" alt="283948612_10_20240522054301629"></p>
<p>（1）前腰口线（2）前浪（3）前内档缝（4）前裤脚口线（5）前侧缝（6）斜袋口线（7）前裥（8）前省（9）后腰口线（10）后浪（11）后内档缝（12）后裤脚口线（13）后侧缝（14）后袋口线（15）后省</p>
<h3 id="制图的常识"><a href="#制图的常识" class="headerlink" title="制图的常识"></a>制图的常识</h3><p><strong>服装主要部位英文代号</strong></p>
<p><img src="/../img/%E6%9C%8D%E8%A3%85%E5%88%B6%E7%89%88%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%85%A5%E9%97%A8/283948612_11_20240522054301832.webp" alt="283948612_11_20240522054301832"></p>
<p><strong>中外长度单位对照表</strong></p>
<p><img src="/../img/%E6%9C%8D%E8%A3%85%E5%88%B6%E7%89%88%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%85%A5%E9%97%A8/283948612_12_20240522054302192.webp" alt="283948612_12_20240522054302192"></p>
<p><strong>服装结构制图符号</strong></p>
<p><img src="/../img/%E6%9C%8D%E8%A3%85%E5%88%B6%E7%89%88%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%85%A5%E9%97%A8/283948612_13_20240522054302521.webp" alt="283948612_13_20240522054302521"></p>
]]></content>
      <categories>
        <category>服装基础知识</category>
      </categories>
      <tags>
        <tag>服装制版</tag>
      </tags>
  </entry>
</search>
